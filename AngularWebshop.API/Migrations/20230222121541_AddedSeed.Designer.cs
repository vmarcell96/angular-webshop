// <auto-generated />
using AngularWebshop.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularWebshop.API.Migrations
{
    [DbContext(typeof(AngularWebshopContext))]
    [Migration("20230222121541_AddedSeed")]
    partial class AddedSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.14");

            modelBuilder.Entity("AngularWebshop.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "An apple.",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Description = "An orange.",
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A strawberry.",
                            Name = "Strawberry"
                        });
                });

            modelBuilder.Entity("AngularWebshop.API.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarRating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This apple had nice flavour.",
                            ProductId = 1,
                            StarRating = 5,
                            Title = "Nice flavour"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The orange had incredible colour, but it was a bit sour.",
                            ProductId = 2,
                            StarRating = 4,
                            Title = "Nice colour"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The strawberries were unripe.",
                            ProductId = 3,
                            StarRating = 2,
                            Title = "Sour strawberry"
                        });
                });

            modelBuilder.Entity("AngularWebshop.API.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "fruit",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "citrus",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "unripe",
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("AngularWebshop.API.Entities.Rating", b =>
                {
                    b.HasOne("AngularWebshop.API.Entities.Product", "Product")
                        .WithMany("Ratings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AngularWebshop.API.Entities.Tag", b =>
                {
                    b.HasOne("AngularWebshop.API.Entities.Product", "Product")
                        .WithMany("Tags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AngularWebshop.API.Entities.Product", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
